name: CD Workflow

on:
  repository_dispatch:
    types:
      - deploy-new-version

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Google Cloud SDK
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      # Authenticate with Google Cloud
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      # Install gke-gcloud-auth-plugin
      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin

      # Set up kubectl
      - name: Set up kubectl
        run: gcloud container clusters get-credentials flask-cluster --zone us-central1-a --project ${{ secrets.GCP_PROJECT_ID }}

      # Deploy the new version (Blue)
      - name: Deploy New Version (Blue)
        run: |
          kubectl set image deployment/flask-deployment-blue flask-app=${{ github.event.client_payload.image }}
          kubectl rollout status deployment flask-deployment-blue

      # Switch traffic to Blue (manual approval step)
      - name: Wait for Approval to Switch Traffic
        uses: hmarr/auto-approve-action@v2
        with:
          approved-by: ${{ secrets.APPROVER }}

      - name: Switch Traffic to Blue
        run: |
          kubectl patch svc flask-service -p '{"spec":{"selector":{"app":"flask-app-blue"}}}'

      # Validate New Version (Optional Step)
      - name: Validate Blue Deployment
        run: |
          kubectl get pods -l app=flask-app-blue
          curl -f http://flask-service.default.svc.cluster.local:8080/health

      # Scale Down Green Deployment
      - name: Scale Down Green Deployment
        run: |
          kubectl scale deployment flask-deployment-green --replicas=0

      # Update Docker tag to green
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Promote to Green
        run: |
          docker tag anhaid/flask-app:new anhaid/flask-app:green
          docker push anhaid/flask-app:green
